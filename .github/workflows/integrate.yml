name: Integrate

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-20.04
    env:
      COMPOSE_FILE: .ci/docker-compose.yml
      LOG_FILE: log.txt
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup cache for docker images
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true

      - name: Print docker and docker-compose version
        run: |
          echo "DOCKER AND DOCKER-COMPOSE VERSION" >> $LOG_FILE
          docker --version | tee -a $LOG_FILE
          docker-compose --version | tee -a $LOG_FILE

      - name: Build docker target
        run: docker-compose build test | tee -a $LOG_FILE

      - name: Run tests in docker container
        run: docker-compose up | tee -a $LOG_FILE

      - name: Print docker-compose config on failure
        if: failure()
        run: |
          echo "DOCKER-COMPOSE CONFIG" >> $LOG_FILE
          docker-compose config | tee -a $LOG_FILE

      - name: Fail
        run: false

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: Upload log file and screenshots on failure
          path: |
            ./${{ env.LOG_FILE }}
            ./tests/functional/screenshots
          if-no-files-found: ignore

  push:
    runs-on: ubuntu-20.04
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup cache for docker images
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # TODO: update tag name
      - name: Build production image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/python-ci-cd-template:latest --target prod .

      - name: Push production image to registry
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/python-ci-cd-template:latest
